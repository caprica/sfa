#
# Specification file for docker compose.
#
# Start two services:
#
#  db  - the MongoDB server
#  web - the application
#
# Notes:
#
#  The database credentials could be externalised via environment properties and a ".env" file.
#  (see https://docs.docker.com/compose/environment-variables/)
#
#  For database initialisation scripts, any file contained in the "/docker-entrypoint-initdb.d" directory on the
#  container will be executed at container creation time. It is possible to copy individual files to the container
#  directory, or in fact mount a local directory with multiple files to the container directory.
#
#  When copying a file, the syntax is "local-file:container-file:ro", here the suffix ":ro" means to copy the file as
#  read-only.
#
#  To persist the database storage between container redeployments, a local directory can be mounted as a volume, e.g:
#
#    - /disks/container-volumes/mongo-sfa:/data/db
#
#  In this example "/disks/container-volumes/mongo-sfa" is a local directory, and "/data/db" is the mount point in the
#  container.
#
#  The database will not be re-initialised with the init scripts if a persistent volume is used and the database has
#  already been initialised.
#
#  Providing a mapping for the ports exposes the ports to the local machine - specifying the ports without a mapping
#  would cause them to be exposed only to the containers themselves.
#
#  It is easy to forget when manually rebuilding the Docker images to be used in the deployment, that you may need to
#  rebuild the application with Maven first. You can then use "docker-compose up --build" to rebuild the Docker image
#  before deployment. If the application has not changed, then "docker-compose up" by itself would be fine.
#
#  It is also possible to use "docker-compose build" to rebuild the images without redeploying them.
#

version: '3.7'

services:

  db:
    image: mongo:4.2.3
    environment:
      - MONGO_INITDB_DATABASE=${DB_NAME}
      - MONGO_INITDB_ROOT_USERNAME=${DB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
    volumes:
      - ./etc/docker-entrypoint-initdb.d/seed-database.js:/docker-entrypoint-initdb.d/seed-database.js:ro
    ports:
      - "27017-27019:27017-27019"

  web:
    build: .
    ports:
      - "8080:8080"
    depends_on:
      - db
